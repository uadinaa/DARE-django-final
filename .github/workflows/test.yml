# .github/workflows/test.yml (Версия для диагностики прямого подключения по ключу)
name: Test SSH Key Setup

on:
  push:
    branches:
      - main
    paths:
      - '.github/workflows/test.yml'
      - 'backend/**'
  workflow_dispatch:

jobs:
  test-key:
    runs-on: ubuntu-latest
    name: Validate SSH Key and Test Connection

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Load and Validate SSH Key (Write to File)
        # Этот шаг только пишет ключ в файл и проверяет его
        id: validate_key
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_KEY }}
        run: |
          echo "Setting up temporary SSH environment..."
          mkdir -p ~/.ssh/
          chmod 700 ~/.ssh/

          echo "Writing key from secret to file..."
          KEY_FILE_PATH=~/.ssh/id_rsa_test # Путь к файлу ключа
          printf "%s\n" "${SSH_PRIVATE_KEY}" > ${KEY_FILE_PATH}
          chmod 600 ${KEY_FILE_PATH}

          echo "Validating key format with ssh-keygen..."
          if ssh-keygen -l -f ${KEY_FILE_PATH} > /dev/null 2>&1; then
            echo "✅ Key format appears valid (fingerprint check passed)."
            ssh-keygen -l -f ${KEY_FILE_PATH}
          else
            echo "❌ ERROR: Key format is invalid according to ssh-keygen."
            exit 1
          fi
          # Агент здесь НЕ запускаем и ключ в него НЕ добавляем

      - name: Attempt SSH Connection Test (Using Key File Directly)
        # Используем ключ из файла, созданного на предыдущем шаге
        if: success() # Выполнять только если предыдущий шаг успешен
        env:
          EC2_HOST: ec2-13-53-50-251.eu-north-1.compute.amazonaws.com
          EC2_USER: ubuntu
        run: |
          echo "Attempting simple SSH connection using key file (-i)..."
          KEY_FILE_PATH=~/.ssh/id_rsa_test # Тот же путь к файлу

          # Устанавливаем known_hosts
          ssh-keyscan -H "${EC2_HOST}" >> ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts

          # Пытаемся выполнить 'exit', указывая ключ явно через -i
          # Добавляем -vvv для максимальной детализации лога SSH клиента
          if ssh -vvv -i ${KEY_FILE_PATH} -o StrictHostKeyChecking=no -o BatchMode=yes ${EC2_USER}@${EC2_HOST} exit; then
             echo "✅ SSH connection test (using key file) successful!"
          else
             echo "❌ ERROR: SSH connection test (using key file) failed."
             # Попробуем вывести конец лога auth.log с сервера для информации
             echo "Attempting to get sshd logs from server..."
             # Для этой команды используем тот же ключ явно
             ssh -i ${KEY_FILE_PATH} -o StrictHostKeyChecking=no ${EC2_USER}@${EC2_HOST} "sudo tail -n 30 /var/log/auth.log || echo 'Failed to get server logs'"
             exit 1
          fi
          # Очистка файла ключа после теста
          echo "Cleaning up test key file..."
          rm ${KEY_FILE_PATH}