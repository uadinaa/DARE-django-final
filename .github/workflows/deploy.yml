name: Deploy Backend to EC2

on:
  push:
    branches:
      - main
    paths:
      - 'backend/**'
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up SSH Key File and Known Hosts
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_KEY }}
          EC2_HOST: ec2-13-53-50-251.eu-north-1.compute.amazonaws.com
        run: |
          mkdir -p ~/.ssh/
          chmod 700 ~/.ssh/
          KEY_FILE_PATH=~/.ssh/id_rsa_deploy
          printf "%s\n" "${SSH_PRIVATE_KEY}" > ${KEY_FILE_PATH}
          chmod 600 ${KEY_FILE_PATH}
          if ! ssh-keygen -l -f ${KEY_FILE_PATH} > /dev/null 2>&1; then
            echo "❌ ERROR: Invalid SSH key format detected in secret." >&2
            exit 1
          fi
          ssh-keyscan -H "${EC2_HOST}" >> ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts

      name: Deploy Backend to EC2

on:
  push:
    branches:
      - main
    paths:
      - 'backend/**'
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up SSH Key File and Known Hosts
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_KEY }}
          EC2_HOST: ec2-13-53-50-251.eu-north-1.compute.amazonaws.com
        run: |
          mkdir -p ~/.ssh/
          chmod 700 ~/.ssh/
          KEY_FILE_PATH=~/.ssh/id_rsa_deploy
          printf "%s\n" "${SSH_PRIVATE_KEY}" > ${KEY_FILE_PATH}
          chmod 600 ${KEY_FILE_PATH}
          if ! ssh-keygen -l -f ${KEY_FILE_PATH} > /dev/null 2>&1; then
            echo "❌ ERROR: Invalid SSH key format detected in secret." >&2
            exit 1
          fi
          ssh-keyscan -H "${EC2_HOST}" >> ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts

      - name: Deploy to EC2
        env:
          EC2_HOST: ec2-13-53-50-251.eu-north-1.compute.amazonaws.com
          EC2_USER: ubuntu
          DEPLOY_DIR: /home/ubuntu/app/backend
          
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_NAME: fitness_db
          DB_USER: postgres
          
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_STORAGE_BUCKET_NAME: ${{ secrets.AWS_STORAGE_BUCKET_NAME }}
          AWS_S3_REGION_NAME: ${{ secrets.AWS_S3_REGION_NAME }}
          AWS_DEFAULT_ACL: 'public-read'
          AWS_LOCATION: 'media' 
        run: |
          ssh -o StrictHostKeyChecking=no -i ${KEY_FILE_PATH} "${EC2_USER}@${EC2_HOST}" << EOF
            cd ${DEPLOY_DIR}

            # Экспортируем ВСЕ переменные окружения для docker-compose
            export SECRET_KEY='${{ env.SECRET_KEY }}'
            export DEBUG='False'
            export DB_PASSWORD='${{ env.DB_PASSWORD }}'
            export DB_NAME='${{ env.DB_NAME }}'
            export DB_USER='${{ env.DB_USER }}'
            export DB_HOST=db
            # --- Экспорт переменных S3 ---
            export AWS_ACCESS_KEY_ID='${{ env.AWS_ACCESS_KEY_ID }}'
            export AWS_SECRET_ACCESS_KEY='${{ env.AWS_SECRET_ACCESS_KEY }}'
            export AWS_STORAGE_BUCKET_NAME='${{ env.AWS_STORAGE_BUCKET_NAME }}'
            export AWS_S3_REGION_NAME='${{ env.AWS_S3_REGION_NAME }}'
            export AWS_DEFAULT_ACL='${{ env.AWS_DEFAULT_ACL }}'
            export AWS_LOCATION='${{ env.AWS_LOCATION }}'
            # --------------------------

            COMPOSE_FILE="docker-compose.prod.yml"
            # ... (проверка наличия файла) ...

            docker-compose -f \${COMPOSE_FILE} down --remove-orphans || echo "..."
            docker-compose -f \${COMPOSE_FILE} pull db
            # Важно пересобрать backend, т.к. изменились requirements.txt
            docker-compose -f \${COMPOSE_FILE} build backend
            docker-compose -f \${COMPOSE_FILE} up -d
            docker image prune -f || echo "..."
            echo "Deployment script finished on EC2."
          EOF
          echo "Deployment process complete."